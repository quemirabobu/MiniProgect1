package com.example.junk.controller;import com.example.junk.Service.CashService;import com.example.junk.Service.UserService;import com.example.junk.domain.User;import com.example.junk.domain.UserDotori;import com.example.junk.repository.CashRepository;import com.example.junk.repository.MemberRepository;import groovy.util.logging.Slf4j;import jakarta.servlet.http.HttpSession;import lombok.RequiredArgsConstructor;import lombok.extern.log4j.Log4j2;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import java.util.ArrayList;import java.util.List;@Log4j2@Controller@RequiredArgsConstructorpublic class HomeController {    private final CashService cashService;    private final MemberRepository memberRepository;    private final CashRepository cashRepository;    private final UserService userService;    @GetMapping("/cash")    public String cashList(Model model, HttpSession session) {        User loginUser = (User) session.getAttribute("loginUser");        log.info("this is         from  cashList  >>>>> {} ", loginUser.getUserName() );        System.out.println("여기 화면쏴주는게 문제였구나");        List<UserDotori> top5PositiveValues = cashService.findAll(loginUser.getUserName(), 0L);        List<UserDotori> filteredList = new ArrayList<>();        log.info("this is    top5PositiveValues     from    >>>>> {} ",top5PositiveValues  );        for (UserDotori user : top5PositiveValues) {            String username = user.getUserName();            if (username != null && username.equals(loginUser.getUserName())) {                filteredList.add(user);            }        }        log.info("this is    filteredList     from    >>>>> {} ",filteredList  );        List<UserDotori> userList1 = cashService.finddotori();        log.info("this is    userList1     from    >>>>> {} ",userList1  );        int sum = 0;        for (UserDotori user : userList1) {            String username = user.getUserName();            if (username != null && username.equals(loginUser.getUserName())) {                sum += user.getDotori();            }        }        loginUser.setBamtori(sum);        userService.saveBamtori(loginUser);        memberRepository.updateBamtori(sum, loginUser.getUserName());        System.out.println("여기까지 온건가");        List<Integer> num = new ArrayList<>();        model.addAttribute("userList", filteredList);        model.addAttribute("sumDotori", sum);        model.addAttribute("number", num);        return "index"; // Assuming the view name is "index.html"    }}